% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_bases.R
\name{count_bases}
\alias{count_bases}
\title{Count DNA bases (A, T, C, G) in a sequence column}
\usage{
count_bases(tbl, keepSequence = TRUE)
}
\arguments{
\item{tbl}{A `data.frame` or `tibble` containing at least one column named `sequence`.}

\item{keepSequence}{Logical (default = `TRUE`). If `FALSE`, the original `sequence`
column will be removed from the output.}
}
\value{
A `tibble` containing the original data (optionally without the `sequence`
column) and four additional columns:
\describe{
  \item{A_count}{Number of adenine (A) bases in each sequence.}
  \item{T_count}{Number of thymine (T) bases in each sequence.}
  \item{C_count}{Number of cytosine (C) bases in each sequence.}
  \item{G_count}{Number of guanine (G) bases in each sequence.}
}
}
\description{
This function counts the occurrences of each nucleotide base (A, T, C, and G)
in a column named `sequence` within a given data frame or tibble.
It adds four new columns (`A_count`, `T_count`, `C_count`, `G_count`) to the
input table, representing the number of each base per sequence.
}
\details{
The function requires the input table to have a column named `sequence`
containing character strings representing DNA sequences.

If `tbl` is missing or not a valid data.frame/tibble, a warning is issued.
If the `sequence` column is missing, an error is raised.
}
\examples{
library(dplyr)

dna_tbl <- tibble::tibble(
  id = 1:3,
  sequence = c("ATCG", "AATTCCGG", "GGGTTTAA")
)

# Count bases and keep the sequence column
count_bases(dna_tbl)

# Count bases and remove the sequence column
count_bases(dna_tbl, keepSequence = FALSE)

}
